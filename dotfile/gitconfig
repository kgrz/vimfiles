[credential]
	helper = store
[alias]
    # One letter
    a = add
    b = branch
    c = commit -m
    d = diff
    f = pull --rebase
    h = push
    k = "!gitk --all &"
    l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    r = rebase
    s = status

    # LA for List Alias. Ex : g la
    la = "!git config -l | grep alias | cut -c 7-"
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

    # Quick
    # Status to stage by number and not name. Ex : g st; g a 1; g u 1
    qs = "!git -c color.ui=always status --short | perl -lane 'my $color1=substr(@F[0], 0, 5); my $flag=substr(@F[0], 5, -3); $flag= \" \" . $flag if not flag =~ m/\\e\\[3m/; $,=\" \"; printf \"%s %4s %3s %s\n\", $color1, ++$l, $flag, @F[1];'"
    # Helper: Remove first arg: seems that ${@:1} not working
    funcremovenumber = "!fct() { echo $@ | perl -ane '$OFS=\" \"; print grep(!/^[\\d,\\.]*$/, @F)' -; }; fct"
    funckeepnumber = "!fct() { echo $@ | perl -ane '$OFS=\" \"; print grep(/^[\\d,\\.]*$/, @F)' -; }; fct"
    # Helper: Quick PrintF: Grep file[s]
    qp = "!qprint() { git funcremovenumber $@; r_num=$(git funckeepnumber $@); git status --short | cat -n | perl -ne \"no warnings;  print if $. ~~ [ $r_num ]\" | awk '{printf \" \" $3}'; }; qprint"
    qa = "!qstage() { git add `git qp $*` ; git qs; }; qstage"
    qu = "!qunstage() { git reset HEAD `git qp $1`; git qs; }; qunstage"
    qd = "!qdiff() { git diff --color=always `git qp $*`; git qs; }; qdiff"
    qe = "!qedit() { vim -c'Gdiffsplit' `git qp $1`; git qs; }; qedit"
    qv = qe
 
    # Util
    aa = add --all
    ca = commit --amend -m 
    ck = checkout
    dc = diff --cached
    ds = dc  # --Staged
    ph = push
    pl = pull
    plr = pull --rebase
    pr = pull --rebase
    ra = rebase --abort
    rb = rebase
    rc = rebase --continue

    # Remove
    rmc = rm --cached

    # Submudule
    smuir = submodule update --init --recursive

    # Find text in any commit ever.
    grep-all = !"f() { git rev-list --all | xargs git grep \"$@\"; }; f"

# vim:ft=sh
[rerere]
	enabled = true
