===============================================================================
                                                 *mystack*
Stack ~

	Some unsorted but gitted stuff



		set nrformats=






EX ~
	:py print 2
	:version
	:h +feature-list
	:h ex-cmd-index
	:t move 

:list
:listchars				| Choose how to represent tabs and spaces




MEM


	:e ++ff=unix
	inoremap <C-X><C-S> <C-O>:set completefunc=syntaxcomplete#Complete<CR><C-X><C-U>
	inoremap <C-x><C-z> <C-o>:set completefunc=SimpleComplete<CR><C-x><C-u>
	imap 
	imap <expr> aa pumvisible() ? "<ESC>:echo 'yes'<CR>" : "<ESC>:echo 'no'<CR>"
	:command -complete=file -nargs=1 OpenFile e <args>
	setlocal omnifunc=syntaxcomplete#Complete

	setlocal omnifunc=syntaxcomplete#Complete
	inoremap <expr><C-X><C-S> neocomplete#start_manual_complete()

	Cv Cj insert \%x00 and can be used as a line separator
	? How to complete keyword





	:set virtualedit=all
	highlight LineNr ctermfg=grey ctermbg=white
	:highlight NonText ctermfg=12  # to display ~ for empay lines
	let &colorcolumn=join(range(81,999),",")


cpp 
	CSearchContext for elcim and <C-X> <C-O>
	youcompleteme, clang_complete or cpp_omnicomplete with ctags, or eclim (currently what I use
	You can use gn in version 7.4 onwards (and gN to go backwards). It replaces the v//e trick.

		Search forward for the last used search pattern, like with `n`, and start Visual mode to select the match










	Jav afunction names 
	\v(public|protected|private|static|\s) +(\w|\<|\>|\[|\])+ *\s+\zs\w+\ze *\([^()]*\)


		:set fileformat  # UNIX window
		map ,a :let mycurf=expand("<cfile>")<cr><c-w>w:execute("e ".mycurf)<cr><c-w>p

		"background color 
		:highlight Normal ctermfg=grey ctermbg=darkblue
		make good fold 

au FileType python setlocal formatprg=autopep8\ -


vim: ft=myhelp:set modificable  
