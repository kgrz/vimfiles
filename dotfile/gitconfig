[credential]
	helper = store
[alias]

    # One letter
    a = add
    c = commit -m
    d = diff
    f = pr
    h = !git push origin $(git rev-parse --abbrev-ref HEAD)
    l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    r = rebase
    s = status

    # LA for List Alias. Ex : g la
    la = "!git config -l | grep alias | cut -c 7-"
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

    # Quick
    # Status to stage by number and not name. Ex : g st; g a 1; g u 1
    qs = "!git status -s | cat -n"
    qa = "!qstage() { git add `git qs | sed -n $1p | awk -F' ' '{ print $3 }'`; git qs; }; qstage"
    qu = "!qunstage() { git reset HEAD `git qs | sed -n $1p | awk -F' ' '{ print $3 }'`; git qs; }; qunstage"
    qd = "!qdiff() { git diff `git qs | sed -n $1p | awk -F' ' '{ print $3 }'`; git qs; }; qdiff"
    qe = "!qedit() { vim -c'Gdiffsplit' `git qs | sed -n $1p | awk -F' ' '{ print $3 }'`; git qs; }; qedit"
    qv = qe
 
    # Util
    aa = add --all
    ca = commit --amend -m 
    ck = checkout
    dc = diff --cached
    ds = dc  # --Staged
    rc = rm --cached
    pr = pull --rebase

    # Rebase
    ra = rebase --abort
    rc = rebase --continue

    # Submudule
    smuir = submodule update --init --recursive

    # Find text in any commit ever.
    grep-all = !"f() { git rev-list --all | xargs git grep \"$@\"; }; f"
