1. Split 					|mysplit|
2. Buffer 					|mybuffer|
3. Tab						|mytab|

===============================================================================
                                                 *mysplit*
Split ~

:sp[lit]					| Split Screen horizontaly 
:vsp[lit]					| Split Screen vertically 
:sview 						| Same as :split in readonly mode
:hide 						| Close current window
:only 						| Close all windows, excepted current
<C-W>o          			| Only 
<C-W><C-W> 					| Switch viewport 
<C-W>[hjkl]					| Move to the next viewport
<C-W>						| Same
<C-W>+ <C--> 				| Increase/decrease Current Viewport.
10<C-W>+ 					| Add 10 lines to current window
<C-W>=						| Igualise viewport size
<C-W>_						| Maximise current window
<C-W>[rR]					| Rotate:(clockwise and counter) change viewport position 
<C-W>q 						| Close current viewport

		^WK Move the current window to the top of the screen, using the full width of the screen.
		^WJ Move the current window to the bottom of the screen, using the full width of the screen.
		^WH Move the current window to the left of the screen, using the full height of the screen.
		^WL Move the current window to the right of the screen, using the full height of the screen.
		^WT Move the current window to a new existing tab.

		^Wx Swap positions with the next window, or if issued with a count n, swap with n th next window.
		^W^X

		^W< Increase the current window width. The default amount is one column.
		^W> Decrease the current window width. The default amount is one column.
		winheight and winwidth options.

		:vertical resize n ^W| Set the current window width to n. The default is to make window as wide as
		winheight option When entering or creating a window, set its height to at least the specified value.
		winwidth option When entering or creating a window, set its width to at least the specified value.
		equalalways option When the number of windows changes, either by splitting or closing windows,
		resize them to be the same size.
		eadirection option Define whether Vim resizes windows equally vertically, horizontally, or both.
		cmdheight option Set the command line height.
		winminheight option Define the minimum window height, which applies to all windows created.
		winminwidth option Define the minimum window width, which applies to all windows created.


		z n <ENTER> Set the current window height to n.
:resize 60 or :resize +5
Cw 10+ and Cw 10>
nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR> nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>
Some pluginng to use submodes permits Cw ++++
:new
:below new
set splitright set splitbelow


===============================================================================
                                                *mybuffer*
Buffer ~


:ls			| display buffer list


:bn			| new
:bd			| delete
:b3			| goto 3
:n :p			| next, previous
:rew 			| rewind to 1st file

:args 			| display argument list
:arg 			|Optional: Display the current arglist.
:arg *.cpp 		|All *.cpp files in current directory.
:argadd *.h 		|And all *.h files.
:argdo %s/pattern/replace/ge | update 	Search and replace in all files in arglist. 

:update			| save if changes
:bufdo 			| do the command to all buffer
:e!   			| return to unmodified file
:e #   			| edit alternative file
:e +name		| edit
:w /some/path/%:r 	| save file in another directory, but with the same name
:sav php.html     	| Save current file as php.html and "move" to php.html

:qa          		| quit all 


  bufdo normal 2G"Ayy "which iterates through the buffers and runs the given command in normal mode. 2G jumps to the appropriate line, and "Ay yanks into register a, appending instead of overwriting (since the A is capitalized). Make sure register a is empty before you start

===============================================================================
                                                *mytab*
Tab ~

:tabnew 		Creates a new tab
:tabp			Go to previous tab 
:tabn			Go to next tab
:gt 			Show next tab
:tabfirst 		Show first tab
:tablast 		Show last tab
:tabm n(position) 	Rearrange tabs
:tabdo %s/foo/bar/g 	Execute a command in all tabs
:tab ball 		Puts all open files in tabs

vim: ft=myhelp
