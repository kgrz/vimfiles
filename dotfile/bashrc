# Init
  # If not running interactively, don't do anything
  [ -z "$PS1" ] && return

  # Goto home
  if [ $PWD == / ] ; then cd ~ ; fi

  # Set OS
  [ ! -z "$(uname -a | grep -i android)" ] \
    && export OS="termux" \
    || export OS="unix"


# Preferences
  # Avoid c-s freezing
  stty -ixon

  # Vi as default `git commit`
  EDITOR='vim'
  # Check the window size after each command and, if necessary, update the values of LINES and COLUMNS.
  shopt -s checkwinsize

  # French characters
  stty cs8 -istrip -parenb
  bind 'set convert-meta off'
  bind 'set meta-flag on'
  bind 'set output-meta on'


# Prompt
  # Save history after each executed line
  export PROMPT_COMMAND+='history -a;'

  # PS1
  parse_git_branch() {
       git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
  }
  # Tourny
  export PS1="";
  export PS1="\[\e[93m\]\h \[\033[32m\]"
  export PS1='\033]0;\w\007'
  export PS1=$PS1"\[\033[32m\]"
  # CD
  export PS1=$PS1"\w\[\033[33m\]"
  # Git Branch
  export PS1=$PS1"\$(parse_git_branch)\[\033[00m\]"
  # New line
  export PS1+='\n$ '


# History
  # append instead of overwrite
  shopt -s histappend
  export HISTSIZE=100000
  export HISTFILESIZE=100000
  export HISTCONTROL=ignoredups:ignorespace


# Head
  clear
  # TODO cat a Heredoc so same commands
  # Nowrap
  tput rmam
  printf '\033[?7l'
  echo '                           \  |  /        '
  echo '                            \_|_/         '
  echo '                /|\     ____/   \____     '
  echo '               / | \        \___/         '
  echo '              /  |  \       / | \         '
  echo '             /___|___\     /  |  \        '
  echo '            _____|_____                   '
  echo '            \_________/                   '
  echo ' ~~^^~~^~^~~^^~^^^^~~~~^~^~^~^^^^^^^      '
  echo '                                          '
  echo '      |\   \\\\__     o                   '
  echo '      | \_/    o_\    o                   '
  echo '      >  _  (( <_  oo                     '
  echo '      | / \__+___/                        '
  echo '      |/     |/                           '

  # Reset wrap
  printf '\033[?7h'
  tput smam


# Include
  if [ -f ~/.bash_aliases.sh ]; then
      . ~/.bash_aliases.sh
  fi

  if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
      . /etc/bash_completion
  fi


# Path
  export PATH="$HOME/.vim/bin:$PATH"
  export PATH="$HOME/Bin:$PATH"
  export PATH="$PATH:$HOME/perl5/bin"
  export PATH="$PATH:$HOME/Software/Android/SDK/android-sdk-linux/platform-tools"
  export PATH="$PATH:$HOME/Software/Android/SDK/android-sdk-linux/tools"
  export PATH="$PATH:$HOME/Program/Eclipse/eclipse"
  export PATH=$PATH:/usr/local/cuda-10.0/bin
  export PATH=$PATH:~/Program/Metapixel/metapixel
  export PYTHONSTARTUP="$HOME/.ipython/profile_default/ipython.py"


# Perl
  export PERL5LIB="$HOME/Software/Perl/Lib:~/Program/Komodo/Komodo-PerlRemoteDebugging-8.0.2-78971-linux-x86_64"
  export PERL5LIB="$HOME/perl5/lib/perl5:${PERL5LIB}}"
  export PERL5DB="BEGIN { require q($PERL5LIB/perl5db.pl)}"
  export PERLDB_OPTS="RemotePort=localhost:9000"
  export DBGP_IDEKEY="whatever"

# Git
  # Samsung j6
  if [ $OS == 'termux' ] ; then
    export GIT_AUTHOR_NAME="tinmux"
    export GIT_AUTHOR_EMAIL=tin@termux.j6
  # Acer
  else
    export GIT_AUTHOR_NAME="tinmarino"
    export GIT_AUTHOR_EMAIL=tinmarino@gmail.com
  fi
  export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
  export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"


# Fast
  complete -W "pull tex make pdf push update" ./my.sh
  #tmux completion
  source ~/.vim/dotfile/tmux_completion.sh
  export style="nice -n 20 perl  '$HOME/Program/Mxnet/mxnet/perl-package/AI-MXNet/examples/gluon/style_transfer/style_transfer.pl'  --model '$HOME/Program/Mxnet/mxnet/perl-package/AI-MXNet/examples/gluon/style_transfer/data/msgnet_21styles-2cb88353.params'"
  alias pltags="pltags.pl /home2/tourneboeuf/Program/Komodo/Komodo-PerlRemoteDebugging-8.0.2-78971-linux-x86_64/* /etc/perl/* /usr/local/lib/x86_64-linux-gnu/perl/5.26.2/* /usr/local/share/perl/5.26.2/* /usr/lib/x86_64-linux-gnu/perl5/5.26/* /usr/share/perl5/* /usr/lib/x86_64-linux-gnu/perl/5.26/* /usr/share/perl/5.26/* /usr/local/lib/site_perl/* /usr/lib/x86_64-linux-gnu/perl-base/*"
  # Execute tmux
  if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
    exec tmux
  fi
